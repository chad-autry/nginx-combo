# Make sure Docker is installed
- hosts: all:!localhost
  gather_facts: false
  become: true
  roles:
    - docker

# Place a full etcd on the etcd hosts
- hosts: etcd
  become: true
  roles:
    - { role: etcd, proxy_etcd: False, tags: [ 'etcd' ] }

# Set the etcd values (if required) from the first etcd host
- hosts: etcd[0]
  become: true
  roles:
    - { role: populate_etcd, tags: [ 'etcd' ] }

# Place a proxy etcd everywhere except the etcd hosts
- hosts: all:!etcd:!localhost
  become: true
  roles:
    - { role: etcd, proxy_etcd: True, tags: [ 'etcd' ] }

# Place Prometheus on the Prometheus hosts
- hosts: prometheus
  become: true
  roles:
    - { role: prometheus, tags: [ 'prometheus' ] }
    - role: discovery 
      vars:
        parent: 'route_discovery'
        service: prometheus
        port: "{{ports['prometheus']}}"
        service_properties:
          private: 'true'
      tags: [ 'prometheus' ]
 
# Place Grafana as the frontend on the Prometheus hosts
- hosts: prometheus
  become: true
  roles:
    - { role: grafana, tags: [ 'grafana' ] }
    - role: discovery
      vars:
        parent: 'route_discovery'
        service: grafana
        port: "{{ports['grafana']}}"
        service_properties:
          upstreamRoute: '/'
          private: 'true'
      tags: [ 'grafana' ] 

# Place prometheus\node_exporter everywhere
- hosts: all:!localhost
  become: true
  roles:
    - { role: prometheus-node-exporter, tags: [ 'prometheus_node_exporter' ] }
        
- name: Remove old staging directory
  hosts: localhost
  tasks:
    - file:
        path: "{{controller_src_staging}}"
        state: absent
      tags:
        - frontend_application
        - backend
    
# Recreate localhost staging directory
- name: Create local staging directory
  hosts: localhost
  tasks:
    - file:
        state: directory
        path: "{{controller_src_staging}}"
      tags:
        - frontend_application
        - backend

# nginx
- hosts: frontend
  become: true
  roles:
    - { role: frontend, tags: [ 'frontend' ] }

# Default Backend nodejs process. Role can be applied additional times to different hosts with different configuration
- hosts: backend
  become: true
  roles:
    - { role: nodejs, identifier: backend, nodejs_port: "{{ports['backend']}}", tags: [ 'backend' ] }
    - role: discovery
      vars:
        parent: 'route_discovery'
        service: backend_nodejs
        port: "{{ports['backend']}}"
        service_properties:
          private: 'false'
      tags: [ 'backend' ]

# Deploy the Google Cloud Functions from localhost
- hosts: localhost
  become: true
  roles:
    - { role: gcp_functions, tags: [ 'functions' ] }
    
# Publish the Google Cloud Functions into etcd
- hosts: etcd[0]
  become: true
  roles:
    - { role: gcp_functions_publishing, tags: [ 'functions' ] }
